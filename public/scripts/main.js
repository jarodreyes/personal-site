// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery.xml2json'], function(xml) {
  var BookView, BooksCollectionView, GoodReadsData, MainRouter, READING_TEMPLATES, ReadingWindow;
  READING_TEMPLATES = $('.reading-templates');
  MainRouter = (function(_super) {

    __extends(MainRouter, _super);

    function MainRouter() {
      return MainRouter.__super__.constructor.apply(this, arguments);
    }

    MainRouter.prototype.routes = {
      'bio/': 'showBio'
    };

    MainRouter.prototype.initialize = function() {
      this.layout = new ReadingWindow;
      return console.log('yay');
    };

    MainRouter.prototype.showBio = function() {
      return $(window).scrollTop(20);
    };

    return MainRouter;

  })(Backbone.Router);
  ReadingWindow = (function(_super) {

    __extends(ReadingWindow, _super);

    function ReadingWindow() {
      return ReadingWindow.__super__.constructor.apply(this, arguments);
    }

    ReadingWindow.prototype.className = 'reading-window';

    ReadingWindow.prototype.template = _.template($('#reading-template').html());

    ReadingWindow.prototype.el = '.reading';

    ReadingWindow.prototype.url = 'http://www.goodreads.com/user/show/5406984.xml?key=Nkya34MwrAyEZ7cnbMzqA';

    ReadingWindow.prototype.events = {
      'click': 'openWindow'
    };

    ReadingWindow.prototype.regions = {
      books: '.book-list'
    };

    ReadingWindow.prototype.initialize = function() {
      this.expanded = false;
      this.getReadingData();
      return this.render();
    };

    ReadingWindow.prototype.openWindow = function(event) {
      (this.$('window')).addClass('opened');
      return this.books.show(this.booksCollectionView);
    };

    ReadingWindow.prototype.getReadingData = function() {
      var _this = this;
      return $.get(this.url, function(xml) {
        var data;
        data = $.xml2json(xml);
        _this.model = new Backbone.Model(data.user);
        return _this.prepareData();
      });
    };

    ReadingWindow.prototype.prepareData = function() {
      var link, updates;
      link = this.model.get('link');
      updates = (this.model.get('updates')).update;
      this.bookList = new Backbone.Collection(updates);
      console.log(this.bookList);
      return this.renderBooks();
    };

    ReadingWindow.prototype.renderBooks = function() {
      return this.booksCollectionView = new BooksCollectionView({
        collection: this.bookList
      });
    };

    return ReadingWindow;

  })(Backbone.Marionette.Layout);
  BookView = (function(_super) {

    __extends(BookView, _super);

    function BookView() {
      return BookView.__super__.constructor.apply(this, arguments);
    }

    BookView.prototype.template = _.template($('#books-template').html());

    return BookView;

  })(Backbone.Marionette.ItemView);
  BooksCollectionView = (function(_super) {

    __extends(BooksCollectionView, _super);

    function BooksCollectionView() {
      return BooksCollectionView.__super__.constructor.apply(this, arguments);
    }

    BooksCollectionView.prototype.itemView = BookView;

    return BooksCollectionView;

  })(Backbone.Marionette.CollectionView);
  GoodReadsData = (function(_super) {

    __extends(GoodReadsData, _super);

    function GoodReadsData() {
      return GoodReadsData.__super__.constructor.apply(this, arguments);
    }

    GoodReadsData.prototype.url = 'http://www.goodreads.com/user/show/5406984.xml?key=Nkya34MwrAyEZ7cnbMzqA';

    GoodReadsData.prototype.fetch = function(data) {
      var results;
      results = $.xml2json(data.results);
      return results;
    };

    return GoodReadsData;

  })(Backbone.Model);
  return new MainRouter;
});
