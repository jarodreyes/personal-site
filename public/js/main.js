// Generated by CoffeeScript 1.5.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['reading-window', '../../app.js'], function(ReadingWindow, App) {
  var HEADER_PADDING, MainPage, MainRouter, TweetCollection, TweetManager, TweetView;
  HEADER_PADDING = 45;
  MainRouter = (function(_super) {

    __extends(MainRouter, _super);

    function MainRouter() {
      MainRouter.__super__.constructor.apply(this, arguments);
    }

    MainRouter.prototype.routes = {
      'bio/': 'showBio',
      'hacker/': 'showHacker'
    };

    MainRouter.prototype.initialize = function() {
      this.mainPage = new MainPage;
      this.reading = new ReadingWindow;
      return console.log('yay');
    };

    MainRouter.prototype.showBio = function() {
      return $(window).scrollTop(20);
    };

    return MainRouter;

  })(Backbone.Router);
  MainPage = (function(_super) {

    __extends(MainPage, _super);

    function MainPage() {
      MainPage.__super__.constructor.apply(this, arguments);
    }

    MainPage.prototype.el = 'body';

    MainPage.prototype.regions = {
      'tweets': '.tweets'
    };

    MainPage.prototype.initialize = function() {
      this.getTweets = new TweetManager;
      _.bindAll(this, 'detectScroll');
      return this.detectScroll();
    };

    MainPage.prototype.detectScroll = function(event) {
      var $hackerHeader, hackerTop,
        _this = this;
      this.headerH = $('.header-main').outerHeight();
      $hackerHeader = $('.header-hacker');
      hackerTop = $hackerHeader.offset().top - (this.headerH - HEADER_PADDING);
      return $(window).scroll(function(event) {
        var hackerMovement, top;
        top = $(window).scrollTop();
        hackerMovement = $('.header-hacker').offset().top;
        console.log(top, hackerTop, _this.headerH);
        if (top >= hackerTop) {
          $('.header-offset').removeClass('absolute');
          $hackerHeader.addClass('fixed');
          $('.nav').addClass('fixed orange');
          return $('.logo').addClass('fixed');
        } else {
          $('.header-offset').addClass('absolute');
          $hackerHeader.removeClass('fixed');
          $('.nav').removeClass('fixed orange');
          return $('.logo').removeClass('fixed');
        }
      });
    };

    return MainPage;

  })(Backbone.Marionette.Layout);
  TweetView = (function(_super) {

    __extends(TweetView, _super);

    function TweetView() {
      TweetView.__super__.constructor.apply(this, arguments);
    }

    TweetView.prototype.template = _.template($('#tweet-template').html());

    return TweetView;

  })(Backbone.Marionette.ItemView);
  TweetCollection = (function(_super) {

    __extends(TweetCollection, _super);

    function TweetCollection() {
      TweetCollection.__super__.constructor.apply(this, arguments);
    }

    TweetCollection.prototype.itemView = TweetView;

    TweetCollection.prototype.itemViewOptions = {
      className: 'tweet block'
    };

    return TweetCollection;

  })(Backbone.Marionette.CollectionView);
  TweetManager = (function(_super) {

    __extends(TweetManager, _super);

    function TweetManager() {
      TweetManager.__super__.constructor.apply(this, arguments);
    }

    TweetManager.prototype.template = _.template($('#tweets-layout').html());

    TweetManager.prototype.initialize = function() {
      var stream;
      stream = App.stream;
      stream.stream();
      return stream.on('data', function(json) {
        return console.log(json);
      });
    };

    return TweetManager;

  })(Backbone.Marionette.Layout);
  return new MainRouter;
});
