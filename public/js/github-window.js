// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['window', 'jquery.xml2json'], function(WindowView, xml2json) {
  var GitCollectionView, GitView, GithubWindow;
  GithubWindow = (function(_super) {

    __extends(GithubWindow, _super);

    function GithubWindow() {
      return GithubWindow.__super__.constructor.apply(this, arguments);
    }

    GithubWindow.prototype.className = 'github-window';

    GithubWindow.prototype.template = _.template($('#github-template').html());

    GithubWindow.prototype.el = '.github';

    GithubWindow.prototype.url = 'https://api.github.com/users/jarodreyes/events/public';

    GithubWindow.prototype.regions = {
      'gits': '.git-commits'
    };

    GithubWindow.prototype.initialize = function() {
      this.getData();
      return GithubWindow.__super__.initialize.apply(this, arguments);
    };

    GithubWindow.prototype.toggleWindow = function(event) {
      this.gits.show(this.gitCollectionView);
      (this.$('small')).toggleClass('invisible');
      return GithubWindow.__super__.toggleWindow.apply(this, arguments);
    };

    GithubWindow.prototype.getData = function() {
      var _this = this;
      return $.ajax({
        url: this.url,
        success: function(data) {
          _this.data = data;
          return _this.prepareData();
        }
      });
    };

    GithubWindow.prototype.prepareData = function() {
      var gits, item, _i, _len, _ref;
      gits = [];
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.type === "PushEvent") {
          item.created_at = new Date(item.created_at).toLocaleString();
          gits.push(item);
        }
      }
      this.gitList = new Backbone.Collection(gits);
      return this.renderGits();
    };

    GithubWindow.prototype.renderGits = function() {
      return this.gitCollectionView = new GitCollectionView({
        collection: this.gitList
      });
    };

    return GithubWindow;

  })(WindowView);
  GitView = (function(_super) {

    __extends(GitView, _super);

    function GitView() {
      return GitView.__super__.constructor.apply(this, arguments);
    }

    GitView.prototype.template = _.template($('#git-template').html());

    return GitView;

  })(Backbone.Marionette.ItemView);
  GitCollectionView = (function(_super) {

    __extends(GitCollectionView, _super);

    function GitCollectionView() {
      return GitCollectionView.__super__.constructor.apply(this, arguments);
    }

    GitCollectionView.prototype.itemView = GitView;

    return GitCollectionView;

  })(Backbone.Marionette.CollectionView);
  return GithubWindow;
});
